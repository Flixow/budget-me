{"version":3,"sources":["data/fetch/common.fetch.js","data/fetch/budget.fetch.js","data/fetch/index.js","data/hooks/useAllCategories.js","data/hooks/useBudget.js","data/hooks/useBudgetedCategories.js","data/hooks/index.js","pages/Budget/components/AddTransactionForm/AddTransactionForm.js","pages/Budget/components/AddTransactionForm/AddTransactionView.js","pages/Budget/components/AddTransactionForm/index.js"],"names":["fetchAllCategories","a","async","fetch","process","res","json","data","fetchBudget","id","fetchBudgetedCategories","budgetId","addBudgetTransaction","method","headers","body","JSON","stringify","common","budget","useAllCategories","useQuery","API","useBudget","useBudgetedCategories","required","value","undefined","AddTransactionForm","onSubmit","noop","categories","groupCategoriesBy","t","useTranslation","categoryItems","useMemo","Object","entries","groupBy","map","key","label","category","name","render","handleSubmit","submitting","form","validate","input","meta","type","placeholder","error","touched","parse","parseFloat","step","variant","disabled","AddTransactionView","allCategories","history","useHistory","useMutation","refetchQueries","handleAddTransaction","useCallback","then","goBack"],"mappings":"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","file":"static/js/6.231485b2.chunk.js","sourcesContent":["export async function fetchAllCategories() {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\n  const data = await res.json();\n\n  return data;\n}\n","export async function fetchBudget({ id }) {\n  return (await fetch(\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`,\n  )).json();\n}\n\nexport async function fetchBudgetedCategories({ budgetId }) {\n  return (await fetch(\n    `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/budgetCategories`,\n  )).json();\n}\n\nexport async function addBudgetTransaction({ budgetId, data }) {\n  // https://github.com/typicode/json-server/issues/925\n  // https://github.com/codekraft-studio/json-server/commit/5f495f0e02e8df47224b2afb3af511fa2e6f806e\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  return await res.json();\n}\n","import * as common from './common.fetch';\nimport * as budget from './budget.fetch';\n\nexport default {\n  common,\n  budget,\n};\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useAllCategories() {\n  return useQuery(\n    ['allCategories'],\n    API.common.fetchAllCategories,\n  );\n}\n\nexport default useAllCategories;\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useBudget(id) {\n  return useQuery(\n    ['budget', { id }],\n    API.budget.fetchBudget,\n  );\n}\n\nexport default useBudget;\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useBudgetedCategories(id) {\n  return useQuery(\n    ['budgetedCategories', { budgetId: id }],\n    API.budget.fetchBudgetedCategories,\n  );\n}\n\nexport default useBudgetedCategories;\n","export { default as useAllCategories } from './useAllCategories';\nexport { default as useBudget } from './useBudget';\nexport { default as useBudgetedCategories } from './useBudgetedCategories';\n","import React, { useMemo } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useTranslation } from 'react-i18next';\nimport { noop, groupBy } from 'lodash';\nimport { Button } from 'components';\n\nconst required = value => (value ? undefined : 'Required');\n\nconst AddTransactionForm = ({ onSubmit = noop, categories, groupCategoriesBy }) => {\n  const { t } = useTranslation();\n  const categoryItems = useMemo(() => groupCategoriesBy ?\n    Object.entries(groupBy(categories, groupCategoriesBy))\n      .map(([key, categories]) => (\n        <optgroup key={key} label={key}>\n          {categories.map(category => (\n            <option key={category.id} value={category.id}>{category.name}</option>\n          ))}\n        </optgroup>\n      )) : (\n      categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)\n    ), [groupCategoriesBy, categories]);\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, form, submitting }) => (\n        <form onSubmit={handleSubmit}>\n          <Field name=\"description\" validate={required}>\n            {({ input, meta }) => (\n              <div>\n                <label>{t('Description')}</label>\n                <input {...input} type=\"text\" placeholder={t('Description')} />\n                {meta.error && meta.touched && <span>{t(meta.error)}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"amount\" validate={required} parse={value => parseFloat(value, 10)}>\n            {({ input, meta }) => (\n              <div>\n                <label>{t('Amount')}</label>\n                <input {...input} type=\"number\" step=\"0.01\" placeholder={t('Amount')} />\n                {meta.error && meta.touched && <span>{t(meta.error)}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"categoryId\" validate={required} parse={value => parseFloat(value, 10)}>\n            {({ input, meta }) => (\n              <div>\n                <label>{t('Category')}</label>\n                <select {...input}>\n                  {categoryItems}\n                </select>\n                {meta.error && meta.touched && <span>{t(meta.error)}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"date\" validate={required}>\n            {({ input, meta }) => (\n              <div>\n                <label>{t('Date')}</label>\n                <input {...input} type=\"date\" />\n                {meta.error && meta.touched && <span>{t(meta.error)}</span>}\n              </div>\n            )}\n          </Field>\n          <div>\n            <Button variant=\"regular\" type=\"submit\" disabled={submitting}>\n              {t('Submit')}\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default AddTransactionForm;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport { useBudget, useAllCategories } from 'data/hooks';\nimport API from 'data/fetch';\n\nimport AddTransactionForm from './AddTransactionForm';\n\nconst AddTransactionView = () => {\n  const { data: allCategories } = useAllCategories();\n  const { data: budget } = useBudget(1);\n  const history = useHistory();\n\n  const [addBudgetTransaction] = useMutation(API.budget.addBudgetTransaction, {\n    refetchQueries: [['budget', { id: '1' }]],\n  });\n\n  const handleAddTransaction = useCallback(data => {\n    addBudgetTransaction({\n      budgetId: budget.id,\n      data,\n    }).then(() => {\n      history.goBack();\n    });\n  }, [addBudgetTransaction, budget, history]);\n\n  return (\n    <AddTransactionForm\n      onSubmit={handleAddTransaction}\n      categories={allCategories}\n      groupCategoriesBy=\"parentCategory.name\"\n    />\n  );\n};\n\nexport default AddTransactionView;\n","export { default } from './AddTransactionView';\n"],"sourceRoot":""}