{"version":3,"sources":["data/fetch/common.fetch.js","data/fetch/budget.fetch.js","data/fetch/index.js","data/hooks/useAllCategories.js","data/hooks/useBudget.js","data/hooks/useBudgetedCategories.js","data/hooks/index.js","utils/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.js","pages/Budget/components/BudgetCategoryList/ParentCategory.js","pages/Budget/components/BudgetCategoryList/CategoryItem.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.js","data/selectors/budget.selectors.js","pages/Budget/components/BudgetCategoryList/index.js"],"names":["fetchAllCategories","a","async","fetch","process","res","json","data","fetchBudget","id","fetchBudgetedCategories","budgetId","addBudgetTransaction","method","headers","body","JSON","stringify","common","budget","useAllCategories","useQuery","API","useBudget","useBudgetedCategories","formatDate","string","date","Date","Intl","DateTimeFormat","format","formatCurrency","value","number","Number","NumberFormat","style","currency","Category","styled","div","theme","colors","gray","dark","spacing","xs","ParentCategory","normal","CategoryAmount","span","negative","red","green","CategoryList","light","onClick","noop","name","amount","categories","transactions","categoryLeftValue","useMemo","budgeted","reduce","acc","category","error","spentOnParentCategory","filter","transaction","find","categoryId","amountValue","defaultProps","CategoryItem","item","spentOnCategory","totalLeft","BudgetCategoryList","budgetedCategories","allCategories","dispatch","useContext","BudgetContext","store","selectParentCategory","useCallback","type","payload","t","useTranslation","handleClickParentCategoryRef","useRef","totalSpent","amountTaken","categoryExpenses","Math","max","calculateAmountTaken","notBudgetedTransactions","filterNotBudgetedTransactions","notBudgetedExpenses","calculateNotBudgetedExpenses","budgetedCategoriesByParent","groupBy","parentCategory","handleClearParentCategorySelect","current","handleSelectRestParentCategory","getListItems","Object","entries","map","parentName","Trigger","children","key","restToSpent","totalAmount","availableForRestCategories","items","clickRef"],"mappings":"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","file":"static/js/4.cbf67089.chunk.js","sourcesContent":["export async function fetchAllCategories() {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\n  const data = await res.json();\n\n  return data;\n}\n","export async function fetchBudget({ id }) {\n  return (await fetch(\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`,\n  )).json();\n}\n\nexport async function fetchBudgetedCategories({ budgetId }) {\n  return (await fetch(\n    `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/budgetCategories`,\n  )).json();\n}\n\nexport async function addBudgetTransaction({ budgetId, data }) {\n  // https://github.com/typicode/json-server/issues/925\n  // https://github.com/codekraft-studio/json-server/commit/5f495f0e02e8df47224b2afb3af511fa2e6f806e\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  return await res.json();\n}\n","import * as common from './common.fetch';\nimport * as budget from './budget.fetch';\n\nexport default {\n  common,\n  budget,\n};\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useAllCategories() {\n  return useQuery(\n    ['allCategories'],\n    API.common.fetchAllCategories,\n  );\n}\n\nexport default useAllCategories;\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useBudget(id) {\n  return useQuery(\n    ['budget', { id }],\n    API.budget.fetchBudget,\n  );\n}\n\nexport default useBudget;\n","import { useQuery } from 'react-query';\nimport API from 'data/fetch';\n\nfunction useBudgetedCategories(id) {\n  return useQuery(\n    ['budgetedCategories', { budgetId: id }],\n    API.budget.fetchBudgetedCategories,\n  );\n}\n\nexport default useBudgetedCategories;\n","export { default as useAllCategories } from './useAllCategories';\nexport { default as useBudget } from './useBudget';\nexport { default as useBudgetedCategories } from './useBudgetedCategories';\n","export const formatDate = string => {\n  const date = new Date(string);\n\n  return new Intl.DateTimeFormat('pl').format(date);\n};\n\nexport const formatCurrency = value => {\n  const number = Number(value);\n\n  return new Intl.NumberFormat('pl', { style: 'currency', currency: 'PLN' }).format(number);\n};\n","import styled from 'styled-components';\n\nconst Category = styled.div`\n  border: 1px solid ${({ theme }) => theme.colors.gray.dark};\n  padding: ${({ theme }) => theme.spacing.xs}px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ParentCategory = styled(Category)`\n  background-color: ${({ theme }) => theme.colors.gray.normal};\n`;\nexport const CategoryAmount = styled.span`\n  font-weight: 700;\n  color: ${({ theme, negative }) => negative ? theme.colors.red.normal : theme.colors.green.normal}\n`;\n\nexport const CategoryList = styled(Category)`\n  background-color: ${({ theme }) => theme.colors.gray.light};\n`;\n","import React, { useMemo } from 'react';\nimport { noop } from 'lodash';\nimport { formatCurrency } from 'utils';\n\nimport { ParentCategory as Root, CategoryAmount } from './BudgetCategoryList.css';\n\nconst ParentCategory = ({\n  onClick = noop, name, amount, categories,\n  transactions,\n}) => {\n  const categoryLeftValue = useMemo(() => {\n    const budgeted = (() => {\n      try {\n        return categories.reduce((acc, category) => acc + category.budget, 0);\n      } catch (error) {\n        return null;\n      }\n    })();\n    const parentCategoryTransactions = transactions\n      .filter(transaction => categories.find(category => category.categoryId === transaction.categoryId));\n    const spentOnParentCategory = parentCategoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\n    const totalLeft = budgeted\n      ? budgeted - spentOnParentCategory\n      : null;\n\n    return totalLeft;\n  }, [categories, transactions]);\n\n  const amountValue = useMemo(() => amount || categoryLeftValue, [amount, categoryLeftValue]);\n\n  return (\n    <Root onClick={onClick}>\n      <span>{name}</span>\n      <CategoryAmount negative={amountValue < 0}>\n        {formatCurrency(amountValue)}\n      </CategoryAmount>\n    </Root>\n  );\n};\n\nParentCategory.defaultProps = {\n  transactions: [],\n  categories: [],\n};\n\nexport default ParentCategory;\n","import React, { useMemo } from 'react';\nimport { formatCurrency } from 'utils';\n\nimport { CategoryList as Root, CategoryAmount } from './BudgetCategoryList.css';\n\nconst CategoryItem = ({\n  item,\n  transactions, categories,\n}) => {\n  const categoryTransactions = transactions.filter(transaction => transaction.categoryId === item.id);\n  const spentOnCategory = categoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\n  const totalLeft = item.budget\n    ? item.budget - spentOnCategory\n    : null;\n  const name = useMemo(() => categories.find(category => category.id === item.categoryId).name, [categories, item]);\n\n  return (\n    <Root>\n      <span>\n        {name}\n      </span>\n      <span>\n        <CategoryAmount negative={totalLeft < 0}>\n          {formatCurrency(totalLeft)}\n        </CategoryAmount>\n      </span>\n    </Root>\n  );\n};\n\nCategoryItem.defaultProps = {\n  transactions: [],\n  categories: [],\n};\n\nexport default CategoryItem;\n","import React, { useMemo, useCallback, useRef, useContext } from 'react';\nimport 'styled-components/macro';\nimport { groupBy } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ToggleableList } from 'components';\nimport { BudgetContext } from 'data/context';\nimport {\n  calculateTotalSpent,\n  calculateAmountTaken,\n  calculateNotBudgetedExpenses,\n  filterNotBudgetedTransactions,\n} from 'data/selectors/budget.selectors';\nimport { useBudget, useBudgetedCategories, useAllCategories } from 'data/hooks';\n\nimport ParentCategory from './ParentCategory';\nimport CategoryItem from './CategoryItem';\n\n\nconst BudgetCategoryList = () => {\n  const { data: budget } = useBudget(1);\n  const { data: budgetedCategories } = useBudgetedCategories(1);\n  const { data: allCategories } = useAllCategories();\n  const { dispatch } = useContext(BudgetContext.store);\n  const selectParentCategory = useCallback(id => dispatch({ type: 'selectParentCategory', payload: id }), [dispatch]);\n  const { t } = useTranslation();\n\n  const handleClickParentCategoryRef = useRef(null);\n  const totalSpent = useMemo(\n    () => calculateTotalSpent(budget.transactions),\n    [budget],\n  );\n\n  const amountTaken = useMemo(\n    () => calculateAmountTaken(budgetedCategories, budget.transactions),\n    [budgetedCategories, budget],\n  );\n\n  const notBudgetedTransactions = useMemo(\n    () => filterNotBudgetedTransactions(budget.transactions, budgetedCategories),\n    [budget, budgetedCategories],\n  );\n\n  const notBudgetedExpenses = useMemo(\n    () => calculateNotBudgetedExpenses(notBudgetedTransactions),\n    [notBudgetedTransactions],\n  );\n\n  const budgetedCategoriesByParent = useMemo(\n    () => groupBy(budgetedCategories, item => allCategories.find(category => category.id === item.categoryId).parentCategory.name),\n    [budgetedCategories, allCategories],\n  );\n\n  const handleClearParentCategorySelect = useCallback(() => {\n    selectParentCategory();\n    handleClickParentCategoryRef.current();\n  }, [selectParentCategory, handleClickParentCategoryRef]);\n  const handleSelectRestParentCategory = useCallback(() => {\n    selectParentCategory(null);\n    handleClickParentCategoryRef.current();\n  }, [selectParentCategory, handleClickParentCategoryRef]);\n\n  const getListItems = useCallback(\n    () => Object.entries(budgetedCategoriesByParent).map(([parentName, categories]) => ({\n      id: parentName,\n      Trigger: ({ onClick }) => (\n        <ParentCategory\n          onClick={useCallback(() => {\n            onClick();\n            selectParentCategory(parentName);\n          }, [onClick])}\n          name={parentName}\n          categories={categories}\n          transactions={budget.transactions}\n        />\n      ),\n      children: categories.map(item => (\n        <CategoryItem\n          key={item.id}\n          categories={allCategories}\n          transactions={budget.transactions}\n          item={item}\n        />\n      )),\n    })),\n    [budgetedCategoriesByParent, allCategories, budget, selectParentCategory],\n  );\n\n  const restToSpent = budget.totalAmount - totalSpent;\n  const availableForRestCategories = budget.totalAmount - amountTaken - notBudgetedExpenses;\n\n  return (\n    <div>\n      <div\n        css={`\n          border-bottom: ${({ theme }) => `5px solid ${theme.colors.gray.light}`};\n        `}\n      >\n        <ParentCategory\n          name={budget.name}\n          amount={restToSpent}\n          onClick={handleClearParentCategorySelect}\n        />\n      </div>\n\n      <ToggleableList\n        items={getListItems()}\n        clickRef={handleClickParentCategoryRef}\n      />\n\n      <div\n        css={`\n          border-top: ${({ theme }) => `5px solid ${theme.colors.gray.light}`};\n        `}\n      >\n        <ParentCategory\n          name={t('Other categories')}\n          amount={availableForRestCategories}\n          onClick={handleSelectRestParentCategory}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetCategoryList;\n","export const calculateTotalSpent = transactions => transactions\n  .reduce((acc, transaction) => acc + transaction.amount, 0);\n\nexport const calculateAmountTaken = (budgetedCategories, transactions) => budgetedCategories\n  .reduce((acc, item) => {\n    const categoryTransactions = transactions\n      .filter(transaction => transaction.categoryId === item.id);\n    const categoryExpenses = categoryTransactions\n      .reduce((acc, transaction) => acc + transaction.amount, 0);\n\n    return acc + Math.max(item.budget, categoryExpenses);\n  }, 0);\n\nexport const filterNotBudgetedTransactions = (transactions, budgetedCategories) => transactions\n  .filter(transaction => !budgetedCategories.find(item => item.id === transaction.categoryId));\n\nexport const calculateNotBudgetedExpenses = notBudgetedTransactions => notBudgetedTransactions\n  .reduce((acc, transaction) => acc + transaction.amount, 0);\n","export { default } from './BudgetCategoryList';\n"],"sourceRoot":""}